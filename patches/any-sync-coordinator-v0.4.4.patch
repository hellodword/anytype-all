diff --git a/accountlimit/accountlimit.go b/accountlimit/accountlimit.go
index 668b66b..049a0e7 100644
--- a/accountlimit/accountlimit.go
+++ b/accountlimit/accountlimit.go
@@ -12,7 +12,7 @@ import (
 	"github.com/anyproto/any-sync/net/pool"
 	"github.com/anyproto/any-sync/nodeconf"
 	"go.mongodb.org/mongo-driver/bson"
-	"go.mongodb.org/mongo-driver/mongo"
+	mongo "github.com/256dpi/lungo"
 	"go.mongodb.org/mongo-driver/mongo/options"
 	"storj.io/drpc"
 
@@ -59,7 +59,7 @@ type AccountLimit interface {
 type accountLimit struct {
 	pool          pool.Pool
 	nodeConf      nodeconf.Service
-	coll          *mongo.Collection
+	coll          mongo.ICollection
 	spaceStatus   spacestatus.SpaceStatus
 	defaultLimits SpaceLimits
 }
diff --git a/acleventlog/acleventlog.go b/acleventlog/acleventlog.go
index 51aa4d6..4bb9e13 100644
--- a/acleventlog/acleventlog.go
+++ b/acleventlog/acleventlog.go
@@ -9,7 +9,7 @@ import (
 	"github.com/anyproto/any-sync/app/logger"
 	"go.mongodb.org/mongo-driver/bson"
 	"go.mongodb.org/mongo-driver/bson/primitive"
-	"go.mongodb.org/mongo-driver/mongo"
+	mongo "github.com/256dpi/lungo"
 	"go.mongodb.org/mongo-driver/mongo/options"
 
 	"github.com/anyproto/any-sync-coordinator/db"
@@ -75,7 +75,7 @@ type AclEventLog interface {
 }
 
 type aclEventLog struct {
-	coll *mongo.Collection
+	coll mongo.ICollection
 }
 
 func (d *aclEventLog) Init(a *app.App) (err error) {
diff --git a/coordinatorlog/coordinatorlog.go b/coordinatorlog/coordinatorlog.go
index 2975a0f..81e87b9 100644
--- a/coordinatorlog/coordinatorlog.go
+++ b/coordinatorlog/coordinatorlog.go
@@ -6,7 +6,7 @@ import (
 	"time"
 
 	"github.com/anyproto/any-sync/app"
-	"go.mongodb.org/mongo-driver/mongo"
+	mongo "github.com/256dpi/lungo"
 
 	"github.com/anyproto/any-sync-coordinator/db"
 )
@@ -33,7 +33,7 @@ func New() CoordinatorLog {
 }
 
 type coordinatorLog struct {
-	logColl *mongo.Collection
+	logColl mongo.ICollection
 }
 
 func (c *coordinatorLog) Init(a *app.App) (err error) {
diff --git a/db/db.go b/db/db.go
index c4273de..6f5b685 100644
--- a/db/db.go
+++ b/db/db.go
@@ -4,10 +4,14 @@ import (
 	"context"
 	"github.com/anyproto/any-sync/app"
 	"github.com/anyproto/any-sync/app/logger"
-	"go.mongodb.org/mongo-driver/mongo"
+	mongo "github.com/256dpi/lungo"
 	"go.mongodb.org/mongo-driver/mongo/options"
 	"go.mongodb.org/mongo-driver/mongo/readconcern"
 	"time"
+	"go.uber.org/zap"
+	"github.com/anyproto/any-sync/nodeconf"
+	"go.mongodb.org/mongo-driver/bson/primitive"
+	"fmt"
 )
 
 const CName = "coordinator.db"
@@ -16,8 +20,8 @@ var log = logger.NewNamed(CName)
 
 type Database interface {
 	app.Component
-	Db() *mongo.Database
-	Tx(ctx context.Context, f func(txCtx mongo.SessionContext) error) error
+	Db() mongo.IDatabase
+	Tx(ctx context.Context, f func(txCtx mongo.ISessionContext) error) error
 }
 
 func New() Database {
@@ -29,18 +33,22 @@ type mongoProvider interface {
 }
 
 type database struct {
-	db *mongo.Database
+	db mongo.IDatabase
 }
 
 func (d *database) Init(a *app.App) (err error) {
 	conf := a.MustComponent("config").(mongoProvider).GetMongo()
 	ctx, cancel := context.WithTimeout(context.Background(), time.Second*10)
 	defer cancel()
-	client, err := mongo.Connect(ctx, options.Client().ApplyURI(conf.Connect))
+	opts := mongo.Options{
+		Store: mongo.NewFileStore("any-sync-coordinator.db", 0644),
+	}
+	client, _, err := mongo.Open(ctx, opts)
 	if err != nil {
 		return err
 	}
 	d.db = client.Database(conf.Database)
+	confapply(a, d)
 	return
 }
 
@@ -48,16 +56,16 @@ func (d *database) Name() (name string) {
 	return CName
 }
 
-func (d *database) Db() *mongo.Database {
+func (d *database) Db() mongo.IDatabase {
 	return d.db
 }
 
-func (d *database) Tx(ctx context.Context, f func(txCtx mongo.SessionContext) error) error {
+func (d *database) Tx(ctx context.Context, f func(txCtx mongo.ISessionContext) error) error {
 	client := d.db.Client()
 	return client.UseSessionWithOptions(
 		ctx,
 		options.Session().SetDefaultReadConcern(readconcern.Majority()),
-		func(txCtx mongo.SessionContext) error {
+		func(txCtx mongo.ISessionContext) error {
 			if err := txCtx.StartTransaction(); err != nil {
 				return err
 			}
@@ -77,3 +85,41 @@ func (d *database) Tx(ctx context.Context, f func(txCtx mongo.SessionContext) er
 			return txCtx.CommitTransaction(context.Background())
 		})
 }
+
+type nodeConfProvider interface {
+	GetNodeConf() nodeconf.Configuration
+}
+
+func confapply(a *app.App, d Database) {
+
+	type ConfModel struct {
+		Id           primitive.ObjectID `bson:"_id"`
+		NetworkId    string             `bson:"networkId"`
+		Nodes        []nodeconf.Node    `bson:"nodes"`
+		CreationTime time.Time          `bson:"creationTime"`
+		Enable       bool               `bson:"enable"`
+	}
+
+	const collName = "nodeConf"
+	// var getLastSort = options.FindOne().SetSort(bson.D{{"_id", -1}})
+	// var getLastFilter = bson.D{{"enable", true}}
+	coll := d.Db().Collection(collName)
+
+	nodeConf := a.MustComponent("config").(nodeConfProvider).GetNodeConf()
+
+	flagNetworkEnable := true
+
+	m := ConfModel{
+		Id:           primitive.NewObjectID(),
+		NetworkId:    nodeConf.NetworkId,
+		Nodes:        nodeConf.Nodes,
+		CreationTime: time.Now(),
+		Enable:       flagNetworkEnable,
+	}
+	ctx := context.Background()
+	if _, err := coll.InsertOne(ctx, m); err != nil {
+		log.Error("InsertOne network", zap.Error(err))
+		return
+	}
+	fmt.Println(m.Id.Hex())
+}
\ No newline at end of file
diff --git a/deletionlog/deletionlog.go b/deletionlog/deletionlog.go
index 66728e9..0fdd9c1 100644
--- a/deletionlog/deletionlog.go
+++ b/deletionlog/deletionlog.go
@@ -9,7 +9,7 @@ import (
 	"github.com/anyproto/any-sync/coordinator/coordinatorproto"
 	"go.mongodb.org/mongo-driver/bson"
 	"go.mongodb.org/mongo-driver/bson/primitive"
-	"go.mongodb.org/mongo-driver/mongo"
+	mongo "github.com/256dpi/lungo"
 	"go.mongodb.org/mongo-driver/mongo/options"
 
 	"github.com/anyproto/any-sync-coordinator/db"
@@ -50,7 +50,7 @@ const (
 )
 
 type deletionLog struct {
-	coll *mongo.Collection
+	coll mongo.ICollection
 }
 
 func (d *deletionLog) Init(a *app.App) (err error) {
diff --git a/go.mod b/go.mod
index 4dfe8ac..94af315 100644
--- a/go.mod
+++ b/go.mod
@@ -17,6 +17,7 @@ require (
 
 require (
 	filippo.io/edwards25519 v1.1.0 // indirect
+	github.com/256dpi/lungo v0.3.7 // indirect
 	github.com/anyproto/go-chash v0.1.0 // indirect
 	github.com/anyproto/go-slip10 v1.0.0 // indirect
 	github.com/anyproto/go-slip21 v1.0.0 // indirect
@@ -69,8 +70,10 @@ require (
 	github.com/prometheus/common v0.60.0 // indirect
 	github.com/prometheus/procfs v0.15.1 // indirect
 	github.com/quic-go/quic-go v0.48.2 // indirect
+	github.com/shopspring/decimal v1.3.1 // indirect
 	github.com/spaolacci/murmur3 v1.1.0 // indirect
 	github.com/tetratelabs/wazero v1.8.1 // indirect
+	github.com/tidwall/btree v1.7.0 // indirect
 	github.com/tyler-smith/go-bip39 v1.1.0 // indirect
 	github.com/xdg-go/pbkdf2 v1.0.0 // indirect
 	github.com/xdg-go/scram v1.1.2 // indirect
@@ -91,5 +94,6 @@ require (
 	golang.org/x/time v0.8.0 // indirect
 	golang.org/x/tools v0.26.0 // indirect
 	google.golang.org/protobuf v1.35.1 // indirect
+	gopkg.in/tomb.v2 v2.0.0-20161208151619-d5d1b5820637 // indirect
 	lukechampine.com/blake3 v1.3.0 // indirect
 )
diff --git a/go.sum b/go.sum
index e932828..e149843 100644
--- a/go.sum
+++ b/go.sum
@@ -1,5 +1,7 @@
 filippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=
 filippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=
+github.com/256dpi/lungo v0.3.7 h1:2tX3oOaeQP2GpLj7eqMaIAHBGmEkrvXSZmqDACOzOjU=
+github.com/256dpi/lungo v0.3.7/go.mod h1:r69kf9biVOiUB6LGKtceM2YwIIF/QRGruhQIKFN6J/U=
 github.com/OneOfOne/xxhash v1.2.2 h1:KMrpdQIwFcEqXDklaen+P1axHaj9BSKzvpUUfnHldSE=
 github.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=
 github.com/aead/siphash v1.0.1/go.mod h1:Nywa3cDsYNNK3gaciGTWPwHt0wlpNV15vwmswBAUSII=
@@ -168,6 +170,8 @@ github.com/quic-go/quic-go v0.48.2 h1:wsKXZPeGWpMpCGSWqOcqpW2wZYic/8T3aqiOID0/KW
 github.com/quic-go/quic-go v0.48.2/go.mod h1:yBgs3rWBOADpga7F+jJsb6Ybg1LSYiQvwWlLX+/6HMs=
 github.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=
 github.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=
+github.com/shopspring/decimal v1.3.1 h1:2Usl1nmF/WZucqkFZhnfFYxxxu8LG21F6nPQBE5gKV8=
+github.com/shopspring/decimal v1.3.1/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=
 github.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=
 github.com/spaolacci/murmur3 v1.1.0 h1:7c1g84S4BPRrfL5Xrdp6fOJ206sU9y293DDHaoy0bLI=
 github.com/spaolacci/murmur3 v1.1.0/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=
@@ -179,6 +183,8 @@ github.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsT
 github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=
 github.com/tetratelabs/wazero v1.8.1 h1:NrcgVbWfkWvVc4UtT4LRLDf91PsOzDzefMdwhLfA550=
 github.com/tetratelabs/wazero v1.8.1/go.mod h1:yAI0XTsMBhREkM/YDAK/zNou3GoiAce1P6+rp/wQhjs=
+github.com/tidwall/btree v1.7.0 h1:L1fkJH/AuEh5zBnnBbmTwQ5Lt+bRJ5A8EWecslvo9iI=
+github.com/tidwall/btree v1.7.0/go.mod h1:twD9XRA5jj9VUQGELzDO4HPQTNJsoWWfYEL+EUQ2cKY=
 github.com/tyler-smith/go-bip39 v1.1.0 h1:5eUemwrMargf3BSLRRCalXT93Ns6pQJIjYQN2nyfOP8=
 github.com/tyler-smith/go-bip39 v1.1.0/go.mod h1:gUYDtqQw1JS3ZJ8UWVcGTGqqr6YIN3CWg+kkNaLt55U=
 github.com/xdg-go/pbkdf2 v1.0.0 h1:Su7DPu48wXMwC3bs7MCNG+z4FhcyEuz5dlvchbq0B0c=
@@ -304,6 +310,8 @@ gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntN
 gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=
 gopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=
 gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=
+gopkg.in/tomb.v2 v2.0.0-20161208151619-d5d1b5820637 h1:yiW+nvdHb9LVqSHQBXfZCieqV4fzYhNBql77zY0ykqs=
+gopkg.in/tomb.v2 v2.0.0-20161208151619-d5d1b5820637/go.mod h1:BHsqpu/nsuzkT5BpiH1EMZPLyqSMM8JbIavyFACoFNk=
 gopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
 gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
 gopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
